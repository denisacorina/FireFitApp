// <auto-generated />
using System;
using FireFitBlazor.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FireFitBlazor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602115638_EntitiesRefactoring")]
    partial class EntitiesRefactoring
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FireFitBlazor.Domain.Models.ARPortionControl", b =>
                {
                    b.Property<Guid>("PortionControlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SuggestedPortionSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortionControlId");

                    b.ToTable("ARPortionControl");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Achievement", b =>
                {
                    b.Property<Guid>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EarnedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserProgressProgressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AchievementId");

                    b.HasIndex("UserProgressProgressId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.BarcodeProduct", b =>
                {
                    b.Property<string>("BarcodeNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BarcodeNumber");

                    b.ToTable("BarcodeProducts");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.BodyMeasurement", b =>
                {
                    b.Property<Guid>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("BodyFatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Chest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Hips")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LeftArm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LeftCalf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LeftThigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("MeasurementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RightArm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RightCalf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RightThigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserProgressProgressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Waist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MeasurementId");

                    b.HasIndex("UserProgressProgressId");

                    b.ToTable("BodyMeasurements");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.CalorieLog", b =>
                {
                    b.Property<Guid>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ConsumedCalories")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecommendedCalories")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LogId");

                    b.HasIndex("UserId");

                    b.ToTable("CalorieLog");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Exercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("WorkoutSessionSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExerciseId");

                    b.HasIndex("WorkoutSessionSessionId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.ExerciseLog", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.ToTable("ExerciseLog");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.FoodLog", b =>
                {
                    b.Property<Guid>("FoodLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodLogId");

                    b.ToTable("FoodLogs");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Goal", b =>
                {
                    b.Property<Guid>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DietaryPreference")
                        .HasColumnType("int");

                    b.Property<int>("FastingWindowHours")
                        .HasColumnType("int");

                    b.Property<bool>("IntermittentFasting")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TargetBodyFatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TargetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GoalId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Ingredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ContainsAnimalProducts")
                        .HasColumnType("bit");

                    b.Property<bool>("ContainsGluten")
                        .HasColumnType("bit");

                    b.Property<bool>("ContainsLactose")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IngredientRecognitionRecognitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientId");

                    b.HasIndex("IngredientRecognitionRecognitionId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.IngredientRecognition", b =>
                {
                    b.Property<Guid>("RecognitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecognitionId");

                    b.ToTable("IngredientRecognition");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Meal", b =>
                {
                    b.Property<Guid>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.MealIngredient", b =>
                {
                    b.Property<Guid>("MealIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("QuantityGrams")
                        .HasColumnType("real");

                    b.HasKey("MealIngredientId");

                    b.HasIndex("MealId");

                    b.ToTable("MealIngredient");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Recipe", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityLevel")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.PrimitiveCollection<string>("DietaryPreferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FitnessExperience")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StartingWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TargetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.PrimitiveCollection<string>("WorkoutTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", t =>
                        {
                            t.Property("TargetWeight")
                                .HasColumnName("User_TargetWeight");
                        });
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.UserProgress", b =>
                {
                    b.Property<Guid>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("BodyFatChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CurrentBodyFatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastMeasurementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("StartingBodyFatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StartingWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WeightChange")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProgressId");

                    b.ToTable("UserProgress");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.WorkoutPreference", b =>
                {
                    b.Property<Guid>("PreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("IntensityLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("PreferredDay")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("PreferredTime")
                        .HasColumnType("time");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PreferenceId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutPreferences");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.WorkoutSession", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntensityLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserProgressProgressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WorkoutType")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("UserProgressProgressId");

                    b.ToTable("WorkoutSession");
                });

            modelBuilder.Entity("UserPreferences", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.PrimitiveCollection<string>("DietaryPreferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Achievement", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.UserProgress", null)
                        .WithMany("Achievements")
                        .HasForeignKey("UserProgressProgressId");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.BarcodeProduct", b =>
                {
                    b.OwnsOne("FireFitBlazor.Domain.ValueObjects.NutritionalInfo", "Nutrition", b1 =>
                        {
                            b1.Property<string>("BarcodeProductBarcodeNumber")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<float>("Calories")
                                .HasColumnType("real")
                                .HasColumnName("Calories");

                            b1.Property<float>("Carbs")
                                .HasColumnType("real")
                                .HasColumnName("Carbs");

                            b1.Property<float>("Fats")
                                .HasColumnType("real")
                                .HasColumnName("Fats");

                            b1.Property<float>("Proteins")
                                .HasColumnType("real")
                                .HasColumnName("Proteins");

                            b1.HasKey("BarcodeProductBarcodeNumber");

                            b1.ToTable("BarcodeProducts");

                            b1.WithOwner()
                                .HasForeignKey("BarcodeProductBarcodeNumber");
                        });

                    b.Navigation("Nutrition")
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.BodyMeasurement", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.UserProgress", null)
                        .WithMany("Measurements")
                        .HasForeignKey("UserProgressProgressId");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.CalorieLog", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.User", null)
                        .WithMany("CalorieLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Exercise", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.WorkoutSession", null)
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutSessionSessionId");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.FoodLog", b =>
                {
                    b.OwnsOne("FireFitBlazor.Domain.ValueObjects.NutritionalInfo", "NutritionalInfo", b1 =>
                        {
                            b1.Property<Guid>("FoodLogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Calories")
                                .HasColumnType("real")
                                .HasColumnName("Calories");

                            b1.Property<float>("Carbs")
                                .HasColumnType("real")
                                .HasColumnName("Carbs");

                            b1.Property<float>("Fats")
                                .HasColumnType("real")
                                .HasColumnName("Fats");

                            b1.Property<float>("Proteins")
                                .HasColumnType("real")
                                .HasColumnName("Proteins");

                            b1.HasKey("FoodLogId");

                            b1.ToTable("FoodLogs");

                            b1.WithOwner()
                                .HasForeignKey("FoodLogId");
                        });

                    b.Navigation("NutritionalInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Goal", b =>
                {
                    b.OwnsOne("FireFitBlazor.Domain.ValueObjects.NutritionalInfo", "NutritionalGoal", b1 =>
                        {
                            b1.Property<Guid>("GoalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Calories")
                                .HasColumnType("real")
                                .HasColumnName("Calories");

                            b1.Property<float>("Carbs")
                                .HasColumnType("real")
                                .HasColumnName("Carbs");

                            b1.Property<float>("Fats")
                                .HasColumnType("real")
                                .HasColumnName("Fats");

                            b1.Property<float>("Proteins")
                                .HasColumnType("real")
                                .HasColumnName("Proteins");

                            b1.HasKey("GoalId");

                            b1.ToTable("Goals");

                            b1.WithOwner()
                                .HasForeignKey("GoalId");
                        });

                    b.Navigation("NutritionalGoal")
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Ingredient", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.IngredientRecognition", null)
                        .WithMany("RecognizedIngredients")
                        .HasForeignKey("IngredientRecognitionRecognitionId");

                    b.HasOne("FireFitBlazor.Domain.Models.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");

                    b.OwnsOne("FireFitBlazor.Domain.ValueObjects.NutritionalInfo", "Nutrition", b1 =>
                        {
                            b1.Property<Guid>("IngredientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Calories")
                                .HasColumnType("real")
                                .HasColumnName("Calories");

                            b1.Property<float>("Carbs")
                                .HasColumnType("real")
                                .HasColumnName("Carbs");

                            b1.Property<float>("Fats")
                                .HasColumnType("real")
                                .HasColumnName("Fats");

                            b1.Property<float>("Proteins")
                                .HasColumnType("real")
                                .HasColumnName("Proteins");

                            b1.HasKey("IngredientId");

                            b1.ToTable("Ingredient");

                            b1.WithOwner()
                                .HasForeignKey("IngredientId");
                        });

                    b.Navigation("Nutrition")
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.MealIngredient", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.Meal", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Recipe", b =>
                {
                    b.OwnsOne("FireFitBlazor.Domain.ValueObjects.NutritionalInfo", "Nutrition", b1 =>
                        {
                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Calories")
                                .HasColumnType("real")
                                .HasColumnName("Calories");

                            b1.Property<float>("Carbs")
                                .HasColumnType("real")
                                .HasColumnName("Carbs");

                            b1.Property<float>("Fats")
                                .HasColumnType("real")
                                .HasColumnName("Fats");

                            b1.Property<float>("Proteins")
                                .HasColumnType("real")
                                .HasColumnName("Proteins");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.Navigation("Nutrition")
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.User", b =>
                {
                    b.OwnsOne("FireFitBlazor.Domain.ValueObjects.WeightGoal", "WeightGoal", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("ChangeType")
                                .HasColumnType("int")
                                .HasColumnName("WeightChangeType");

                            b1.Property<decimal>("TargetWeight")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("TargetWeight");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("WeightGoal")
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.WorkoutPreference", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.User", null)
                        .WithMany("WorkoutPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.WorkoutSession", b =>
                {
                    b.HasOne("FireFitBlazor.Domain.Models.UserProgress", null)
                        .WithMany("WorkoutSessions")
                        .HasForeignKey("UserProgressProgressId");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.IngredientRecognition", b =>
                {
                    b.Navigation("RecognizedIngredients");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Meal", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.User", b =>
                {
                    b.Navigation("CalorieLogs");

                    b.Navigation("WorkoutPreferences");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.UserProgress", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Measurements");

                    b.Navigation("WorkoutSessions");
                });

            modelBuilder.Entity("FireFitBlazor.Domain.Models.WorkoutSession", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
