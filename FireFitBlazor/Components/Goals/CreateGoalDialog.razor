@* @using FireFitBlazor.Application.DTOs
@using FireFitBlazor.Application.Services
@using FireFitBlazor.Domain.Enums
@using Radzen
@using Radzen.Blazor
@inject IGoalService GoalService
@inject DialogService DialogService

<RadzenCard>
    <CardHeader>
        <h3>Create New Goal</h3>
    </CardHeader>
    <CardContent>
        <RadzenTemplateForm TItem="GoalDto" Data="@goal" Submit="@OnSubmit">
            <div class="row">
                <div class="col-md-6">
                    <RadzenLabel Text="Goal Type" Component="GoalType" />
                    <RadzenDropDown @bind-Value="@goal.Type" Data="@Enum.GetValues(typeof(GoalType))" TValue="GoalType" />
                </div>
                <div class="col-md-6">
                    <RadzenLabel Text="Dietary Preference" Component="DietaryPreference" />
                    <RadzenDropDown @bind-Value="@goal.DietaryPreference" Data="@Enum.GetValues(typeof(DietaryPreference))" TValue="DietaryPreference" />
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-6">
                    <RadzenLabel Text="Target Weight (kg)" Component="TargetWeight" />
                    <RadzenNumeric @bind-Value="@goal.TargetWeight" TValue="decimal?" />
                </div>
                <div class="col-md-6">
                    <RadzenLabel Text="Target Body Fat %" Component="TargetBodyFatPercentage" />
                    <RadzenNumeric @bind-Value="@goal.TargetBodyFatPercentage" TValue="decimal?" />
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-6">
                    <RadzenLabel Text="Target Date" Component="TargetDate" />
                    <RadzenDatePicker @bind-Value="@goal.TargetDate" />
                </div>
                <div class="col-md-6">
                    <RadzenLabel Text="Intermittent Fasting" Component="IntermittentFasting" />
                    <RadzenSwitch @bind-Value="@goal.IntermittentFasting" />
                </div>
            </div>

            @if (goal.IntermittentFasting)
            {
                <div class="row mt-3">
                    <div class="col-md-6">
                        <RadzenLabel Text="Fasting Window (hours)" Component="FastingWindowHours" />
                        <RadzenNumeric @bind-Value="@goal.FastingWindowHours" TValue="int" />
                    </div>
                </div>
            }

            <div class="row mt-3">
                <div class="col-md-6">
                    <RadzenLabel Text="Calorie Goal" Component="CalorieGoal" />
                    <RadzenNumeric @bind-Value="@goal.CalorieGoal" TValue="int" />
                </div>
                <div class="col-md-6">
                    <RadzenLabel Text="Protein Goal (g)" Component="ProteinGoal" />
                    <RadzenNumeric @bind-Value="@goal.ProteinGoal" TValue="decimal" />
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-6">
                    <RadzenLabel Text="Carb Goal (g)" Component="CarbGoal" />
                    <RadzenNumeric @bind-Value="@goal.CarbGoal" TValue="decimal" />
                </div>
                <div class="col-md-6">
                    <RadzenLabel Text="Fat Goal (g)" Component="FatGoal" />
                    <RadzenNumeric @bind-Value="@goal.FatGoal" TValue="decimal" />
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-12">
                    <RadzenButton ButtonType="ButtonType.Submit" Text="Create Goal" ButtonStyle="ButtonStyle.Primary" />
                    <RadzenButton ButtonType="ButtonType.Button" Text="Cancel" Click="@OnCancel" ButtonStyle="ButtonStyle.Secondary" />
                </div>
            </div>
        </RadzenTemplateForm>
    </CardContent>
</RadzenCard>

@code {
    [Parameter]
    public Guid UserId { get; set; }

    private GoalDto goal = new GoalDto
    {
        UserId = Guid.Empty,
        Type = GoalType.WeightLoss,
        DietaryPreference = DietaryPreference.None,
        IntermittentFasting = false,
        FastingWindowHours = 16,
        CalorieGoal = 2000,
        ProteinGoal = 150,
        CarbGoal = 200,
        FatGoal = 65,
        IsActive = true
    };

    protected override void OnInitialized()
    {
        goal.UserId = UserId;
    }

    private async Task OnSubmit(GoalDto goal)
    {
        await GoalService.CreateGoalAsync(
            goal.UserId,
            goal.Type,
            goal.CalorieGoal,
            goal.ProteinGoal,
            goal.CarbGoal,
            goal.FatGoal,
            goal.IntermittentFasting,
            goal.FastingWindowHours,
            goal.DietaryPreference,
            goal.TargetWeight,
            goal.TargetBodyFatPercentage,
            goal.TargetDate);

        DialogService.Close(true);
    }

    private void OnCancel()
    {
        DialogService.Close(false);
    }
}  *@