@using Domain.Models  
@using Application.Services  
@using static FireFitBlazor.Domain.Enums.FoodTrackingEnums  
@inject IWorkoutService WorkoutService  
@inject DialogService DialogService  
@inject NotificationService NotificationService  
@inject NavigationManager NavigationManager  
@using static Microsoft.AspNetCore.Components.Web.RenderMode  
@using FireFitBlazor.Application.DTOs;
@rendermode InteractiveServer  

<RadzenStack Gap="1rem">
    <RadzenTemplateForm Data="@workout" Submit="@FormSubmit" TItem="WorkoutSessionDto">
        <RadzenStack Gap="1rem">
            <RadzenDropDown Data="@WorkoutTypeOptions"
                            TextProperty="Text"
                            ValueProperty="Value"
                            @bind-Value="workout.WorkoutType"
                            TValue="WorkoutType"
                            Name="WorkoutType"
                            Class="w-100" />

            <RadzenFormField Text="Date" Variant="Variant.Filled">  
                <RadzenDatePicker @bind-Value="@workoutDate"   
                Class="w-100"  
                Name="Date" />  
            </RadzenFormField>

            <InputNumber @bind-Value="workoutDurationMinutes"
                         class="rz-input w-100"
                         min="1"
                         style="padding: 0.5rem; height: 38px;" />



            <InputNumber @bind-Value="workoutIntensityLevel"
                         class="rz-input w-100"
                         min="1"
                         style="padding: 0.5rem; height: 38px;" />

            <InputNumber @bind-Value="workoutCaloriesBurned"
                         class="rz-input w-100"
                         min="1"
                         style="padding: 0.5rem; height: 38px;" />

            <RadzenFormField Text="Notes" Variant="Variant.Filled">  
                <RadzenTextArea @bind-Value="@workoutNotes"   
                Class="w-100"  
                Name="Notes"  
                Rows="3" />  
            </RadzenFormField>  

            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="1rem">  
                <RadzenButton ButtonType="ButtonType.Submit"   
                Text="Save"   
                ButtonStyle="ButtonStyle.Primary" />  
                <RadzenButton Text="Cancel"   
                ButtonStyle="ButtonStyle.Light"   
                Click="@Cancel" />  
            </RadzenStack>  
        </RadzenStack>  
    </RadzenTemplateForm>  
</RadzenStack>  

@code {
    [Parameter] public string UserId { get; set; }

    private DateTime workoutDate;  
    private int workoutDurationMinutes;  
    private int workoutCaloriesBurned;  
    private int workoutIntensityLevel = 5; 
    private string? workoutNotes;
    private WorkoutSessionDto workout = new();


    private IEnumerable<object> WorkoutTypeOptions =>
        Enum.GetValues<WorkoutType>()
            .Cast<WorkoutType>()
            .Where(w => w != WorkoutType.None)
            .Select(w => new { Text = w.ToString(), Value = w });

   [Inject]  
   public IHttpClientFactory HttpClientFactory { get; set; } = default!;  

   private string? currentUserId;  
   private User? currentUser;  

   private async Task FormSubmit()  
   {  
       try  
       {  
           var newWorkout = new WorkoutSessionDto{

                    UserId = UserId,
                    WorkoutType = workout.WorkoutType,
                    StartTime = workoutDate,
                    DurationMinutes = workoutDurationMinutes,
                    CaloriesBurned = workoutCaloriesBurned,
                    IntensityLevel = workoutIntensityLevel,
                    Notes = workoutNotes ?? string.Empty
                };

           await WorkoutService.AddWorkout(newWorkout);  
           DialogService.Close(true);  
       }  
       catch (Exception ex)  
       {  
           NotificationService.Notify(NotificationSeverity.Error, "Error", "Failed to add workout: " + ex.Message);  
       }  
   }  

   private void Cancel()  
   {  
       DialogService.Close();  
   }  
}